{{/*
A template that returns an image-puller daemonset. It will use 
- pre-helm-upgrade image pulling (pulls images before helm upgrades, temporary)
- continuous image pulling (pulls images for cluster autoscalers, persistent)
*/}}
{{- define "jupyterhub.imagePuller.daemonset" -}}
kind: DaemonSet
metadata:
  name: {{ print .componentPrefix "image-puller" }}
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
    {{- if .hook }}
    hub.jupyter.org/deletable: "true"
    {{- end }}
  {{- if .hook }}
  annotations:
    # create it before installs/upgrades ...
    "helm.sh/hook": pre-install,pre-upgrade
    # ... and before the image-awaiter job ...
    "helm.sh/hook-weight": "-10"
    # ... but delete it in the end
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "jupyterhub.matchLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        {{- include "jupyterhub.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 0
      automountServiceAccountToken: false
      initContainers:
        - name: image-pull-singleuser
          image: {{ .Values.singleuser.image.name }}:{{ .Values.singleuser.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - echo "Pulling complete"
        {{ if not .Values.singleuser.cloudMetadata.enabled }}
        - name: image-pull-metadata-block
          image: {{ .Values.singleuser.networkTools.image.name }}:{{ .Values.singleuser.networkTools.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - echo "Pulling complete"
        {{ end }}
        {{ range $k, $v := .Values.prePuller.extraImages }}
        - name: image-pull-{{ $k }}
          image: {{ $v.name }}:{{ $v.tag }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - echo "Pulling complete"
        {{ end }}
      containers:
        - name: pause
          image: {{ .Values.prePuller.pause.image.name }}:{{ .Values.prePuller.pause.image.tag }}
{{- end -}}
