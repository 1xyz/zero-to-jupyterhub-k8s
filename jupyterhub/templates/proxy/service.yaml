{{- $HTTPS := (and .Values.proxy.https.hosts .Values.proxy.https.enabled) }}
{{- $autoHTTPS := (and $HTTPS (eq .Values.proxy.https.type "letsencrypt")) }}
{{- $manualHTTPS := (and $HTTPS (eq .Values.proxy.https.type "manual")) -}}
apiVersion: v1
kind: Service
metadata:
  name: proxy-api
  labels:
    # TODO: component / app name duplicated, consider this.
    {{- include "jupyterhub.labels" . | nindent 4 }}
spec:
  selector:
    {{- include "jupyterhub.labels" . | nindent 4 }}
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-public
  labels:
    # TODO: component / app name duplicated, consider this.
    {{- include "jupyterhub.labels" . | nindent 4 }}
    {{- if .Values.proxy.service.labels }}
    {{- .Values.proxy.service.labels | toYaml | trimSuffix "\n" | nindent 4 }}
    {{- end }}
  {{- if .Values.proxy.service.annotations }}
  annotations:
    {{- .Values.proxy.service.annotations | toYaml | trimSuffix "\n" | nindent 4 }}
  {{- end }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      {{- if $autoHTTPS }}
      targetPort: 80
      {{- else }}
      targetPort: 8000
      {{- end }}
      # allow proxy.service.nodePort for http
      {{- if .Values.proxy.service.nodePorts.http }}
      nodePort: {{ .Values.proxy.service.nodePorts.http }}
      {{- end }}
    {{- if $HTTPS }}
    - name: https
      port: 443
      protocol: TCP
      {{- if $manualHTTPS }}
      targetPort: 8443
      {{- else }}
      targetPort: 443
      {{- end }}
      {{ if .Values.proxy.service.nodePorts.https }}
      nodePort: {{ .Values.proxy.service.nodePorts.https }}
      {{- end }}
    {{- end }}
  selector:
    {{- if $autoHTTPS }}
    component: autohttps
    {{- else }}
    component: proxy
    {{- end }}
    release: {{ .Release.Name }}
  type: {{ .Values.proxy.service.type }}
  {{- if .Values.proxy.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.proxy.service.loadBalancerIP }}
  {{- end }}
