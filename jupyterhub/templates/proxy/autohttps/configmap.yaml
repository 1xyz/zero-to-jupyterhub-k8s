{{- $HTTPS := (and .Values.proxy.https.hosts .Values.proxy.https.enabled) }}
{{- $autoHTTPS := (and $HTTPS (eq .Values.proxy.https.type "letsencrypt")) }}
{{- if $autoHTTPS -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: traefik-proxy-config
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
data:
  traefik.toml: |
    # traefik.toml file template
    defaultEntryPoints = ["http", "https"]

    logLevel = "INFO"
    # log errors, which could be proxy errors
    [accessLog]
    format = "json"
    [accessLog.filters]
    statusCodes = ["500-999"]

    [accessLog.fields.headers]
    [accessLog.fields.headers.names]
    Authorization = "redact"
    Cookie = "redact"
    Set-Cookie = "redact"
    X-Xsrftoken = "redact"

    [respondingTimeouts]
    idleTimeout = "10m0s"

    [entryPoints]
      [entryPoints.http]
      address = ":80"

      [entryPoints.https]
      address = ":443"

    [wss]
    protocol = "http"

    [certificatesResolvers.le.acme]
      email = {{ required "proxy.https.letsencrypt.contactEmail is a required field" .Values.proxy.https.letsencrypt.contactEmail | quote }}
      storage = "/etc/acme/acme.json"
      {{- if .Values.proxy.https.letsencrypt.acmeServer }}
      caServer = {{ .Values.proxy.https.letsencrypt.acmeServer | quote }}
      {{- end}}
      [certificatesResolvers.le.acme.httpChallenge]
        # used during the challenge
        entryPoint = "http"
    [providers]
      [providers.file]
        filename = '/etc/traefik/dynamic.toml'

  dynamic.toml: |

    [tls]
      [tls.options]
        [tls.options.default]
          sniStrict = true
          minVersion = "VersionTLS12"
          # Adapted from https://ssl-config.mozilla.org/#server=traefik&server-version=1.7.12&config=intermediate
          cipherSuites = [
            "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
            "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
            "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
            "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
          ]

    [http.middlewares]
      [http.middlewares.redirect.redirectScheme]
        scheme = "https"

    [http.routers]
      [http.routers.httpredirect]
        rule = "PathPrefix(`/`)"
        service = "chp"
        entrypoints = ["http"]
        middlewares = ["redirect"]

      [http.routers.chp]
        rule = "PathPrefix(`/`)"
        entrypoints = ["https"]
        service = "chp"
          [http.routers.chp.tls]
            options = "default"
            certResolver = "le"
            {{- range $host := .Values.proxy.https.hosts }}
            [[http.routers.chp.tls.domains]]
            main = "{{ $host }}"
            {{- end}}

    [http.services]
      [http.services.chp.loadBalancer]
        [[http.services.chp.loadBalancer.servers]]
          url = "http://proxy-http:8000/"
{{- end }}
