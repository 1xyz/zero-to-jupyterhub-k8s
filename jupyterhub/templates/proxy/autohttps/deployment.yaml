{{- $HTTPS := (and .Values.proxy.https.hosts .Values.proxy.https.enabled) }}
{{- $autoHTTPS := (and $HTTPS (eq .Values.proxy.https.type "letsencrypt")) }}
{{- if $autoHTTPS -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autohttps
  labels:
    {{- include "jupyterhub.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "jupyterhub.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jupyterhub.matchLabels" . | nindent 8 }}
        hub.jupyter.org/network-access-proxy-http: "true"
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: autohttps
      {{- end }}
      {{- if .Values.scheduling.podPriority.enabled }}
      priorityClassName: {{ .Release.Name }}-default-priority
      {{- end }}
      terminationGracePeriodSeconds: 60
      nodeSelector: {{ toJson .Values.proxy.nodeSelector }}
      {{- include "jupyterhub.coreAffinity" . | nindent 6 }}
      volumes:
        - name: webroot
          emptyDir: {}
        - name: certificates
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: nginx-proxy-config
      initContainers:
      - name: volume-mount-hack-why-god-still
        image: busybox
        command:
        - /bin/sh
        - -c
        - chmod 0755 /usr/share/nginx/html /etc/letsencrypt
        volumeMounts:
          - name: webroot
            mountPath: /usr/share/nginx/html
          - name: certificates
            mountPath: /etc/letsencrypt
      containers:
        - name: nginx
          image: "{{ .Values.proxy.nginx.image.name }}:{{ .Values.proxy.nginx.image.tag }}"
          {{- with .Values.proxy.nginx.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          resources:
            {{- .Values.proxy.nginx.resources | toYaml | trimSuffix "\n" | nindent 12 }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: webroot
              mountPath: /usr/share/nginx/html
            - name: certificates
              mountPath: /etc/letsencrypt
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/
        - name: certbot
          image: "{{ .Values.proxy.autocertbot.image.name }}:{{ .Values.proxy.autocertbot.image.tag }}"
          {{- with .Values.proxy.autocertbot.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          command: ["/usr/local/bin/autocert.py"]
          env:
          # We need this to get logs immediately
          - name: PYTHONUNBUFFERED
            value: "True"
          args:
          - --test-cert
          - {{ .Release.Name }}-https-certbot-dir
          - yuvipanda@gmail.com
          {{- range $host := .Values.proxy.https.hosts }}
          - {{ $host }}
          {{- end }}
          volumeMounts:
            - name: webroot
              mountPath: /usr/share/nginx/html
            - name: certificates
              mountPath: /etc/letsencrypt
{{- end }}
